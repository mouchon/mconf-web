<% last ||= false -%>
<% show_author ||= false -%>

<div id="parent_<%=thread.id%>" class="<%=cycle("even_thread" , "odd_thread")%> post_cloud <%='last' if last%>">
  <div class="thread">

    <div class="thread_content">
      <div class="div-logo">
        <%= raw(link_logo(thread.space, :size =>'w48', :url => space_path(thread.space), :title=>thread.space.name)) %>
      </div>

      <div class="thread-home">
        <!-- Options for the user to edit, delete or answer a thread..only visible at the extended view-->
        <% if extended %>
          <ul class="thread_options extended_thread">
            <li><%=link_to(image_tag("icons/exclamation.png",:class=>"icon",:alt => t('spam.report')), spam_lightbox_space_post_path(thread.space,thread),{:name => thread.id, :class => 'spam_link', :title => t('spam.report')}) if logged_in? && thread.spam != true%></li>
            <li><%=link_to image_tag("icons/comments-add.png",:class=>"icon",:alt => t('reply') ), space_post_path(thread.space,thread,:reply_to =>thread),{:name => thread.id, :class => 'reply_to_link', :title => t('comment.add')}if thread.space.authorize?([:create, :content],:to => current_user)%></li>
            <li><%=link_to image_tag("icons/pencil.png",:class=>"icon", :alt => t('edit')), get_edit_route(thread),{:name => thread.id, :class => 'edit_post_link', :title => t('edit')} if thread.authorize?(:update, :to => current_user)%></li>
            <li><%=link_to image_tag("icons/cancel.png",:class=>"icon", :alt => t('delete.one') ), space_post_path(thread.space,thread),{ :class => 'delete_thread', :confirm => t('delete.confirm', :element => thread.title), :method => :delete, :title => t('delete.one') } if thread.authorize?(:delete, :to => current_user)%></li>
          </ul>
        <% end %>

        <ul class="thread-title">
          <li>
            <%=image_tag("icons/comments.png",:class=>"icon", :title => t('post.home.one', :space=>thread.space.name))%>
            <% if show_author and thread.author -%>
              <span class="unified_user"><%=link_to thread.author.name,user_path(thread.author), { :class=>"unified_user" } %>:</span>
            <% end -%>
            <%=link_to first_words(thread.title, 30), space_post_path(thread.space,thread), { :class=>"unified_posts" } if thread.space.authorize?([:read, :content],:to => current_user)%>
            <%if thread.attachments.any?%>
              <%= image_tag "icons/attach.png", { :title => thread.attachments.first.filename, :class=>"icon" } %>
            <%end%>
            <span class="updated extend_thread <%= 'offscreen' if extended %>"><%= t('updated_time_ago', :time => time_ago_in_words(thread.updated_at)) %></span>
          </li>
          <li>
            <div class="grey extend_thread <%= 'offscreen' if extended %>">
              <%=first_words(thread.text,75)%>
            </div>
            <div id="grey" class="extended_thread grey <%= 'offscreen' unless extended %>">
              <%=render :partial => "posts/parent_post",:locals => { :post =>  thread, :selected_post => false}%>
            </div>
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>
